@use "variables" as v;
@use 'sass:math';
@mixin class-variable-position ($className, $number, $position, $axis) {
    &.#{$className}_#{$number} {
        background-position-#{$axis}: -$position;
    }
}
@mixin generate-class-variable-position($min, $max, $start_offset, $increment, $className, $axis) {
    $loopoffset: 0;
    @if $min ==  0 {
        $loopoffset: 1;
    }
    @for $i from $min through $max {
        $position: ($increment * ($i - 1 + $loopoffset)) + $start_offset;
        @include class-variable-position($className,$i, $position, $axis)
    }
}
@mixin generate-class-variable-position-equation($min, $max, $exponentEQv1, $exponentEQv2, $exponentEQv3, $className, $axis) {
    $loopoffset: 0;
    @if $min ==  0 {
        $loopoffset: 1;
    }
    @for $i from $min through $max {
        $position: -($exponentEQv1 - $exponentEQv2 * math.pow($i,$exponentEQv3));
        @include class-variable-position($className,$i, $position, $axis)
    }
}
@mixin generate-icon-x-position($min, $max, $start_offset, $increment) {
    @include generate-class-variable-position($min, $max, $start_offset, $increment, 'icon', 'x')
}
@mixin generate-splay-x-position($min, $max, $start_offset, $increment) {
    @include generate-class-variable-position($min, $max, $start_offset, $increment, 'splay', 'x')
}
@mixin generate-color-x-position($min, $max, $start_offset, $increment) {
    @include generate-class-variable-position($min, $max, $start_offset, $increment, 'color', 'x')
}
@mixin generate-color-y-position($min, $max, $start_offset, $increment) {
    @include generate-class-variable-position($min, $max, $start_offset, $increment, 'color', 'y')
}
@mixin generate-bonus-x-position($min, $max, $start_offset, $increment) {
    @include generate-class-variable-position($min, $max, $start_offset, $increment, 'bonus', 'x')
}
@mixin generate-bonus-x-position-equation($min, $max, $exponentEQv1, $exponentEQv2, $exponentEQv3,) {
    @include generate-class-variable-position-equation($min, $max, $exponentEQv1, $exponentEQv2, $exponentEQv3, 'bonus', 'x')
}

@mixin square-age {
	background-color: black;
	border: 1px solid white;
	color: white;
	text-align: center;
}

@mixin icon-background {
    background-image: url('img/resource_icons.jpg');
}
@mixin city-special-icon-background {
    background-image: url('img/cities_special_icons.png');
}
@mixin new-city-special-icons {
    background-image: url('img/new_cities_icons.png');
}
@mixin bonus-background {
    background-image: url('img/bonus_icons.png');
}
@mixin squares-background {
    background-image: url('img/squares.png');
}